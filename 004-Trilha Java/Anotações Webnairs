Anotações... Trilha Java :)

------------------------------------------------------------

# Webinars #

**Testes em uma aplicação**

Alguém da equipe irá desenvolver esse teste.
Analista de teste-Só faz os testes, não desenvolve a aplicação.
Teste tradicional-Navegação na aplicação.

--> Teste unitário:
Verificar o comportamento das menores unidades em sua aplicação.
Não comprometimento do código principal.

- Ferramentas: BackEnd (Java: JUnit)
Karma e Jasmine para Angular(JS)

- Metodologia: TDD(Test Driven Development), ou Desenvolvimento Orientado a Testes. Inicia os testes unitários antes mesmo de começar a desenvolver as funcionalidades.

--> Teste de performance:
Pega uma funcionalidade da aplicação e faz tudo junto. Verificar então se a aplicação responde no tempo esperado.
Tempo de resposta, saúde do servidor, memória, processador, acesso a discos...etc.

--> Teste de carga:
 Popular os dados do banco de dados, ouseja, fazer vários resgistros e depois avaliar a performance.

--> Teste de estresse:
Robôs acessam a aplicação como se fossem humano e vão abrir as treds, chamadas paralelas como se fosse numa rotina de trabalho normal por exemplo.

------------------------------------------------------------

**Microsserviços**
Abordagem arquitetônica e organizacional de desenvolvimento de software, na qual o software consiste em pequenos serviços independentes que se comunicam usando APIs bem definidas.
Esser serviços pertencem a pequenas equipes autossuficientes.

Escalabilidade- Ampliar a capacidade de resposta daquele microsserviço.

------------------------------------------------------------

**RAs - Requisistos de Arquitetura**
Usam o arquitetura de negócios para conduzir os requisitos reais para seus sistemas de informação.
Analise das necessidades de negócios e o espaço das instalações de uma empresa para planejar e estruturar estrategicamente a alocação e distribuição dos ativos tecnológicos.

Requisitos funcionais - São os requisitos de negócio, diz qual o propósito da solução. "O que?"

Requisitos Não funcionais - São requisitos  que dizem respeito a "como" as funcionalidades serão entregues ao usuário.




